#!/bin/sh
# Part of spindle http://asbradbury.org/projects/spindle
#
# See LICENSE file for copyright and license details

set -ex

. ./common

CURIMG=stage6.$IMGFORMAT

install_packages() {
  onvm_chroot sh -l -ex - <<\EOF
EOF
}

cleanup_wireless_defaults() {
  onvm_chroot sh -l -ex - <<\EOF
########### REMOVE ME AFTER REBUILDING STAGE 3 ############
# replace defualt interfaces and hotplug interfaces
sed -i '/^INTERFACES/d' /etc/default/ifplugd
sed -i '/^HOTPLUG_INTERFACES/d' /etc/default/ifplugd
echo "INTERFACES=\"\" 
HOTPLUG_INTERFACES=\"eth0\"" >> /etc/default/ifplugd
###########################################################

# REALTEK DEFAULTS:
#  doesnt give a shit about dhcp/ifplugd/wpa_supplicant
#  interface needs to be UP in ifconfig to set mode
# RALINK defaults:
#  shits given about wpa_supplicant/ifplugd/etc
#  interface needs to be DOWN in ifconfig to set mode

# remove wpa_supplicant from /etc/network/if-* 
find /etc/network/if-* -name 'wpasupplicant' -exec rm -v {} \;

EOF
}

add_meshdna_init_script() {
# This script is in need of some serious love
  onvm_chroot sh -l -ex - <<\EOF
cat <<\EOF1 > /etc/init.d/meshdna
#!/bin/bash
# /etc/init.d/meshdna
export PATH=$PATH:/usr/local/bin:/usr/local/sbin

# The following part carries out specific functions depending on arguments.
case "$1" in
  start)
    echo -ne "Starting meshdna... "
    iw dev wlan0 set type ibss
    ip link set wlan0 up
    iw dev wlan0 ibss join meshdna 2437 HT40+ 02:12:34:56:78:9a
    batctl if add wlan0
    ip link set bat0 up
    echo -e "Done!\r"
    ;;
  stop)
    echo -ne "Stopping meshdna... "
    ip link set bat0 down
    batctl if del wlan0
    ip link set wlan0 down
    echo -e "Done!\r"
    ;;
  *)
    echo "Usage: /etc/init.d/meshdna {start|stop}"
    exit 1
    ;;
esac

exit 0
EOF1
chmod +x /etc/init.d/meshdna
update-rc.d meshdna defaults
EOF
}


add_alfred_init_script() {
# This script is in need of some serious love
  onvm_chroot sh -l -ex - <<\EOF
cat <<\EOF1 > /etc/init.d/alfred
#!/bin/sh

### BEGIN INIT INFO
# Provides:        alfred
# Required-Start:  $network $remote_fs $syslog
# Required-Stop:   $network $remote_fs $syslog
# Default-Start:   3 4 5
# Default-Stop: 
# Short-Description: Start Alfred
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin

. /lib/lsb/init-functions

DAEMON=/usr/local/sbin/alfred
PIDFILE=/var/run/alfred.pid

test -x $DAEMON || exit 5

LOCKFILE=/var/lock/alfred

ALFREDOPTS="-i bat0 -m"

lock_alfred() {
  if [ -x /usr/bin/lockfile-create ]; then
    lockfile-create $LOCKFILE
    lockfile-touch $LOCKFILE &
    LOCKTOUCHPID="$!"
  fi
}

unlock_alfred() {
  if [ -x /usr/bin/lockfile-create ] ; then
    kill $LOCKTOUCHPID
    lockfile-remove $LOCKFILE
  fi
}

case $1 in
  start)
    log_daemon_msg "Starting A.L.F.R.E.D. daemon" "alfred"
    lock_alfred
      start-stop-daemon --start --quiet -b --exec $DAEMON -- $ALFREDOPTS;
    status=$?
    unlock_alfred
    log_end_msg $status
      ;;
  stop)
    log_daemon_msg "Stopping A.L.F.R.E.D. daemon" "alfred"
      start-stop-daemon --stop --quiet --exec $DAEMON
    log_end_msg $?
    rm -f $PIDFILE
      ;;
  restart)
    $0 stop && sleep 2 && $0 start
      ;;
  status)
    status_of_proc $DAEMON "alfred server"
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
    exit 2
    ;;
esac
EOF1
chmod +x /etc/init.d/alfred
update-rc.d alfred defaults
EOF
}

cd $WORKDIR
dotask branch_image ../$OUTDIR/stage5.$IMGFORMAT $CURIMG
dotask run_qemu $CURIMG
dotask mount_apt_cache
dotask disable_starting_services
dotask install_packages
dotask cleanup_wireless_defaults
dotask add_meshdna_init_script
dotask add_alfred_init_script
dotask save_space_using_hardlink
dotask allow_starting_services
dotask update_issue
dotask fingerprint_debian
dotask shutdown_qemu
dotask finish_image
